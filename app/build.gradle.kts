/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.7.10"

    // Apply the application plugin to add support for building a CLI application in Java.
    application

    id("com.apollographql.apollo3").version("3.5.0")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:30.1-jre")

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

    implementation("com.apollographql.apollo3:apollo-runtime:3.5.0")

}

/*tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile>().configureEach {
    kotlinOptions {
        useOldBackend = true
//        freeCompilerArgs = listOf("-opt-in=kotlin.RequiresOptIn")
    }
}*/

application {
    // Define the main class for the application.
    mainClass.set("subscription.AppKt")
}

apollo {
    packageName.set("subscription")

    // This will create a downloadSampleApolloSchemaFromIntrospection task
    service("Sample") {
        packageNamesFromFilePaths("")
        useSchemaPackageNameForFragments.set(true)
        introspection {
            endpointUrl.set("https://test-dev.hasura.app/v1/graphql")
            headers.set(mapOf("X-Hasura-Admin-Secret" to "68kLjrmCTK6ddY7yMZ3x9GegV4ODztHJLHaP1Z8OlE8dJGgbeUPfXNbFeevW"))
            schemaFile.set(file("src/main/graphql/schema.json"))
        }

    }
}